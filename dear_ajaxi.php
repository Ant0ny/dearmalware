<?php
@session_start();
$cat = __DIR__;
$exts = array(
	'.php','.inc','.phtml'
);

if ($_POST['action'] == 'get_structure'){
	unset($_SESSION['files']);
	echo '<h2>Directories structure of your site:</h2><button class="btn" data-toggle="collapse" data-target="#collapseExample">See the structure!</button>'; 
	echo '<div class="collapse" id="collapseExample">'; recursive($cat, $exts); 
	echo '</div>';
}

if ($_POST['action'] == 'check_viruses'){
	$search_1 = array(
		'base64_decode','base64_encode','eval','system','system_shell','exec','passthru'
	);
	$search_2 = array(
		'$_POST', '$_GET', '$_REQUEST'
	);
	
	$output = '<h3>Ð¡heckable files:</h3>';
	$is_found = false; 
	foreach ($_SESSION['files'] as $file){
		$count_1 = $count_2 = $results_1 = $results_2 = 0;
		$flag = 0;
		foreach($exts as $ext){
			if (mb_strpos($file, $ext)){
				$flag = 1;
			}
		}
		if ($flag){
			$output .= '<p>'.$file.'<br>';
			$str = file_get_contents($file);
			foreach ($search_1 as $s){
				$count_1 += mb_substr_count($str, $s);
			}	
			if ($count_1) //$results_1[$file] = $count_1;
				$output .= '<strong>'.getNumEnding($count_1, array('Found','Found')).' <span class="red">'.$count_1.'</span> '.
					getNumEnding($count_1, array('a dangerous function', 'dangerous functions')).' </strong><!-- [?]--><br>';
			foreach ($search_2 as $s){
				$count_2 += mb_substr_count($str, $s);		
			}	
			if ($count_2) //$results_2[$file] = $count_2;
				$output .= '<strong>'.getNumEnding($count_1, array('Found','Found')).' <span class="yellow">'.$count_2.
					'</span> potentially '.getNumEnding($count_1, array('dangerous variable', 'dangerous variables')).' of HTTP-requests</strong><!-- [?]--><br>';			
				
			$output .= '</p>';
			if ($count_1 || $count_2){
				$is_found = true;
			} 
			//break;
		}
	}
	header('Content-type: application/json; charset=utf-8');
	echo json_encode(array('whatfound'=>$output,'isfound'=>$is_found));
	exit;
}

function getNumEnding($number, $endingArray)
{
    switch ($number)
    {
        case (1): $ending = $endingArray[0]; break;
        default: $ending = $endingArray[1];
    }
    return $ending;
}

function recursive($dir, $exts)
{
   	static $deep = 0;
 
   	$odir = opendir($dir);
 
   	while (($file = readdir($odir)) !== FALSE)
   	{
      	if ($file == '.' || $file == '..')
      	{
         	continue;
      	}
      	else
      	{
      		$flag = 0;

      		foreach($exts as $ext){
				if (mb_strpos($file, $ext)){
					$flag = 1;
				}
			}

			$str = '';

			if ($flag){
				$str = '<span class="red"> ...verifying</span>';
			}
         	echo str_repeat('---', $deep).$dir.DIRECTORY_SEPARATOR.$file.$str.'<br>';
		 	$_SESSION['files'][] = $dir.DIRECTORY_SEPARATOR.$file;
      	}
 
     	 if (is_dir($dir.DIRECTORY_SEPARATOR.$file))
      	{
         	$deep ++;
         	recursive($dir.DIRECTORY_SEPARATOR.$file, $exts);
         	$deep --;
      	}
   	}
   	closedir($odir);
}
 
